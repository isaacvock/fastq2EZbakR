####### GENERAL INFORMATION ABOUT THIS CONFIG #######
#
# This config file allows you to specify a number of important pieces of information that
# the fastq2EZbakR pipeline will require to run. It also allows you to set optional parameters
# for all tools that fastq2EZbakR makes use of.
#
# File paths can either be absolute (e.g., ~/path/to/file/or/directory) or relative
# to the directory in which you are calling the pipeline from (e.g., data/fastq/WT_1 in the 
# example samples entry means to look in the data directory present in the directory
# where you called `snakemake` to run the pipeline).
#
####### PARAMETERS YOU NEED TO SET #######

# Run bam2bakR only? If true, will expect paths to bam files as input and alignment steps will be skipped. If false,
# paths to directories containing fastq files will be expected as input.
bam2bakr: False

## Paths to data to process
# path to directory containing fastq files if bam2bakr is False
  # fastq files can be either gzipped or unzipped
  # Each set of fastq files must be in a different directory
# path to bam files if bam2bakr is True
samples:
    WT_1: data/WT1
    WT_2: data/WT2
    WT_ctl: data/WTctl

## example of what samples will look like for fastq input
# samples:
#   WT_1: data/fastq/WT_1
#   WT_2: data/fastq/WT_2
#   WT_ctl: data/fastq/WT_ctl
#   KO_1: data/fastq/KO_1
#   KO_2: data/fastq/KO_2
#   KO_ctl: data/fastq/KO_ctl


# -s4U control sample IDs
control_samples: ['WT_ctl']

# Paired end? 
  # Set to True or False, no double quotes
PE: True

# Path to genome fasta file
genome: data/genome/genome.fasta


# Path to annotation gtf file
annotation: data/annotation/genome.gtf


# Which aligner to use? 
  # Options are:
    # 1) star
    # 2) hisat2
aligner: "hisat2"


# Path to directory containing indices
  # Indices will be built automatically if not present
  # I would suggest naming this "aligner"_index, though any
  # directory path name will do (avoid results/...; the 
  # results/ directory is where the pipeline output will be created,
  # so probably better to avoid specifying a path there that might
  # clash with the names of one of the other automatically created
  # directories). 
indices: star_index


# Strandedness
  # set to "reverse", "yes", or "no"
  # reverse means that read 2 represents 5' to 3' sequence of original RNA (read 1 thus represents its reverse complement)
  # yes means that read 1 represents 5' to 3' sequence of original RNA
  # no means unstranded
  # Used by HTSeq (see https://htseq.readthedocs.io/en/master/htseqcount.html for details)
strandedness: "reverse"


# Augmentative analysis strategies
  # Transcripts:
    # Only compatible with STAR alignment.
    # Final cB will have a column named "transcripts" which will indicate the set of transcripts that each read is 
    # compatible with. This can be used in conjunction with bakR to perform transcript-isoform specific kinetic parameter
    # estimates.
  # FlatStacks:
    # Flatten annotation with DEXSeq and have a column in the final cB correspond to assignment of reads to exonic
    # bins. Useful to identify certain isoform-specific effects.
  # RSEM+:
    # Onloy compatible with STAR alignment.
    # Estimate kinetic parameters for transcript isoforms by combining RSEM quantification with bakR's statistical model.
strategies:
    RSEMp: False
    Transcripts: False

# Features to quantify
features:
    genes: False
    exons: False
    transcripts: False
    exonic_bins: False
    junctions: False
    eij: False
    eej: False

####### OPTIONAL PARAMETERS FOR EACH TOOL USED #######


##### PARAMETERS MOST WORTH DOUBLE CHECKING #####

# Adapters to pass to fastp 
  # Not strictly necessary as fastp can autodetect. Autodetection is more accurate for paired-end data
  # For paired-end data with widely used Illumina TruSeq adapters, this could be: 
  # "--adapter_sequence AGATCGGAAGAGCACACGTCTGAACTCCAGTCA --adapter_sequence_r2 AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT"
fastp_adapters: ""


# Path to flattened annotation 
# Will be created if not already present
# Only relevant if using FlatStacks
flat_annotation: "data/annotation/flat.gtf"


# Add a full-gene "transcript" to annotation used for STAR + RSEM to quantify pre-mRNA.
  # This is a nice way to "regress out" pre-mRNA abundance and to identify
  # problematic gene annotations (e.g., regions where estimated pre-mRNA abundance
  # is as high if not higher than appreciably expressed isoforms).
  #
  # The annotation with the full-gene "transcript" will only be used for STAR's alignment
  # and RSEM quantification. The full-gene transcript will not be a feature to which
  # reads are assigned by featureCounts.
quantify_premRNA: False

# Track site-specific mutational information
mutpos: True


# Normalize sequencing tracks?
normalize: True



# Types of mutations to make tracks for otherwise
  # Comma separated string of mutation type
  # Examples:
    # "TC"
      # count T-to-C mutations
    # "TC,GA"
      # counts T-to-C and G-to-A mutations
mut_tracks: "TC,AG,AC"


# Minimum base quality to call mutation
minqual: 40



# String common to spike-in gene_ids in annotation gtf
  # If you have no spike-ins, then this should be "\"\"", i.e., an empty string ("")
spikename: "\"\""


# Are you using the Windows subsystem for Linux?
  # Due to a bug in STAR/GNU parallel, tracks have to be created iteratively if this is the case
WSL: False


# Are there jI, jM, XF, GF, or EF tags in provided bam files?
  # These will break HTSeq or lead to unexpected behavior and will
  # thus be removed prior to running HTSeq.
  # NOTE: these tags will not be removed from the input bam files,
  # just from processed bam files generated by fastq2EZbakR
remove_tags: False


# Merge mutation counts and feature assignments in a RAM-efficient manner?
  # Downside is that it's a bit slower
lowRAM: False


##### OTHER FEATURECOUNTS PARAMETERS #####
# Parameters automatically specified:
  # Genes: -R -f -g gene_id -t transcript
  # Exons: -R -g gene_id -J
  # Transcripts: -R -f -g transcript_id -t exon -O
  # Exonbins: -R -f -g exon_id -t exonic_part -O
# If PE = True, then "-p --countReadPairs" is also automatically set
#
# !!DO NOT REDUNDANTLY SPECIFY AUTOMATICALLY SPECIFIED PARAMETERS!!

# Parameters for assignment of reads to genes
fc_genes_extra: "--primary"

# Parameters for assignment of reads to exons
fc_exons_extra: "--nonOverlap 0 --primary"

# Parameters for assignment of reads to transcripts
fc_transcripts_extra: "--nonOverlap 0 --primary"

# Parameters for assignment of reads to exonbins
fc_exonbins_extra: "--primary"

# Parameters for assignment of reads to exon-exon junctions
fc_eej_extra: "--primary"

# Parameters for assignment of reads to exon-intron junctions
fc_eij_extra: "--primary"


##### JUNCTION ANNOTATION PARAMETERS #####

junction_annotation_params: ""

##### OTHER FASTP PARAMETERS #####
  # See https://github.com/OpenGene/fastp for details

# Optional parameters to set for fastp
fastp_parameters: "" 




##### FASTQC PARAMETERS #####
  # See https://www.bioinformatics.babraham.ac.uk/projects/fastqc/ for details

# Optional parameters to set for fastqc
fastqc_params: ""



##### STAR PARAMETERS #####

# Optional parameters to set for star index
  # --sjdbGTFfile is automatically set to be the provided annotation file
star_index_params: "--sjdbOverhang 99"


# SAM tags to add to alignment
star_sam_tags: ["NH", "HI", "AS", "NM", "MD", "nM"]


# Optional parameters to set for star align
  # --sjdbGTFfile is automatically set to be the provided annotation file
  # --outSAMattributes will also be set and provided the tags specified in `star_sam_tags`, overwriting whatever is set here
  # Finally, --outSAMType will be force set to BAM SortedByCoordinate, overwriting whatever is set here
  # We suggest turning off soft-clipping to improve assignment of reads to exons
star_align_params: "--alignEndsType Local"



##### HISAT2 PARAMETERS #####

# Optional parameters to set for hisat2 indexing
hisat2_index_params: ""


# Optional parmaeters to set for hisat2 alignment
  # NOTE: --rna-strandedness is automatically set based on required strandedness parameter
    # DON'T REDUNDANTLY SPECIFY --rna-strandedness HERE!!
  # We suggest turning off soft-clipping to improve assignment of reads to exons
hisat2_align_params: "--no-softclip"



# Index base name. If not specified, defaults to "hisat2_index"
hisat2_index_base: ""



##### RSEM PARAMETERS #####

# Optional parameters to set for RSEM indexing
rsem_index_params: ""


# Optional parameters to set for RSEM quantification
rsem_quant_params: ""


##### RSEM+ parameters #####

# New read mutation rates
# If set to -1, then rates will be estimated by model
# Set rate to 0 if -s4U sample
pnews:
    WT_1: 0.05 
    WT_2: 0.05
    WT_ctl: 0

# Old read mutation rates
# If set to -1, then rates will be estimated by model
# Set rate to 0 if -s4U sample
polds:
    WT_1: 0.001
    WT_2: 0.001
    WT_ctl: 0


##### SITE-SPECIFIC MUTATION CALLING PARAMETERS #####

min_pos_coverage: 1
max_pos_coverage: 100000


##### LINKS TO SNAKEMAKE WRAPPERS USED #####
  # Can be useful to see how optional parameters get passed to these tools

# fastp wrapper: https://snakemake-wrappers.readthedocs.io/en/stable/wrappers/fastp.html

# fastqc wrapper: https://snakemake-wrappers.readthedocs.io/en/stable/wrappers/fastqc.html

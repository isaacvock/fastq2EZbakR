from snakemake.utils import min_version

##### set minimum snakemake version #####

min_version("6.4.1")


##### setup config and necessary parameters #####


configfile: "config/config.yaml"


##### Impute potentially missing config parameters for backwards compatibiltiy #####

# Dumb way to do this, need to refactor to just use config.get() everywhere
if "lowRAM" not in config:
    config["lowRAM"] = False

if "run_rsem" not in config:
    config["run_rsem"] = True

if "skip_trimming" not in config:
    config["skip_trimming"] = False

if "download_fastqs" not in config:
    config["download_fastqs"] = False

if "sra_accessions" not in config:
    config["sra_accessions"] = []

if "strategies" in config:
    config["features"]["tec"] = config["strategies"]["Transcripts"]

if "tec" not in config["features"]:
    config["features"]["tec"] = False

if "strategies" not in config:
    config["strategies"] = {"RSEMp": False, "Transcripts": config["features"]["tec"]}

if "transcripts" not in config["features"]:
    config["features"]["transcripts"] = False

if "fc_transcripts_extra" not in config:
    config["fc_transcripts_extra"] = ""

if "final_output" not in config:
    config["final_output"] = {"cB": True, "cUP": False, "arrow": False}

if "bcftools_call_params" not in config:
    config["bcftools_call_params"] = ""

if "bcftools_mpileup_params" not in config:
    config["bcftools_mpileup_params"] = ""

##### setup report #####


report: "report/workflow.rst"


##### setup singularity #####


# this container defines the underlying OS for each job when using the workflow
# with --use-conda --use-singularity
container: "docker://continuumio/miniconda3"


##### load rules #####


include: "rules/common.smk"
include: "rules/bam2bakr.smk"
include: "rules/features.smk"
include: "rules/lowram.smk"


if config["download_fastqs"]:

    include: "rules/sra.smk"


if not config["bam2bakr"]:

    include: "rules/preprocess.smk"
    include: "rules/alignment.smk"
    include: "rules/rsem.smk"
    include: "rules/rsem_plus.smk"
    include: "rules/multiQC.smk"


# include: "rules/salmon.smk"


if config["features"]["exonic_bins"]:

    include: "rules/flatten.smk"


##### target rules #####


rule all:
    input:
        get_other_output(),
